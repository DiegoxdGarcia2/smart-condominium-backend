{
	"info": {
		"_postman_id": "fase2-smart-condominium-api",
		"name": "Smart Condominium - Fase 2: Gestión Financiera y Comunicación",
		"description": "Colección de Postman para probar las nuevas funcionalidades de la Fase 2:\n- 📢 Sistema de Comunicados (Announcements)\n- 💰 Sistema de Cuotas Financieras (Financial Fees)\n\nBase URL: http://127.0.0.1:8000\nAutenticación: JWT Bearer Token",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "🔐 Autenticación",
			"item": [
				{
					"name": "Login Administrador",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set('access_token', responseJson.access);",
									"    pm.environment.set('refresh_token', responseJson.refresh);",
									"    pm.test('Login exitoso - Tokens guardados', function () {",
									"        pm.expect(responseJson.access).to.exist;",
									"        pm.expect(responseJson.refresh).to.exist;",
									"    });",
									"} else {",
									"    pm.test('Error en login', function () {",
									"        pm.expect.fail('Login falló con código: ' + pm.response.code);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@smartcondo.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/token/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"token",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Residente Juan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set('access_token', responseJson.access);",
									"    pm.environment.set('refresh_token', responseJson.refresh);",
									"    pm.test('Login exitoso - Tokens guardados', function () {",
									"        pm.expect(responseJson.access).to.exist;",
									"        pm.expect(responseJson.refresh).to.exist;",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"juan.perez@email.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/token/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"token",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "📢 Comunicados (Announcements)",
			"item": [
				{
					"name": "Listar Todos los Comunicados",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/administration/announcements/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"administration",
								"announcements",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear Nuevo Comunicado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set('last_announcement_id', responseJson.id);",
									"    pm.test('Comunicado creado exitosamente', function () {",
									"        pm.expect(responseJson.id).to.exist;",
									"        pm.expect(responseJson.title).to.equal('Reunión de Administración - Octubre 2025');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Reunión de Administración - Octubre 2025\",\n    \"content\": \"Estimados residentes, les convocamos a la reunión mensual de administración que se llevará a cabo el próximo viernes 11 de octubre a las 7:00 PM en el salón de eventos. Temas a tratar: presupuesto mensual, nuevas propuestas de mejoras y elección de representantes. Su participación es muy importante para la comunidad.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/administration/announcements/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"administration",
								"announcements",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener Comunicado Específico",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/administration/announcements/1/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"administration",
								"announcements",
								"1",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar Comunicado",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"ACTUALIZADO: Reunión de Administración - Octubre 2025\",\n    \"content\": \"IMPORTANTE: La reunión mensual de administración ha sido reprogramada para el sábado 12 de octubre a las 6:00 PM en el salón de eventos. Favor confirmar asistencia. Temas a tratar: presupuesto mensual, nuevas propuestas de mejoras y elección de representantes.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/administration/announcements/{{last_announcement_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"administration",
								"announcements",
								"{{last_announcement_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear Comunicado de Emergencia",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"AVISO URGENTE: Corte de Agua Programado\",\n    \"content\": \"Estimados residentes, les informamos que mañana miércoles 9 de septiembre habrá un corte de agua programado de 8:00 AM a 2:00 PM debido a trabajos de mantenimiento en la red principal. Recomendamos almacenar agua suficiente. Disculpen las molestias.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/administration/announcements/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"administration",
								"announcements",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "💰 Cuotas Financieras (Financial Fees)",
			"item": [
				{
					"name": "Listar Todas las Cuotas",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/administration/financial-fees/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"administration",
								"financial-fees",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear Nueva Cuota Extraordinaria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set('last_fee_id', responseJson.id);",
									"    pm.test('Cuota creada exitosamente', function () {",
									"        pm.expect(responseJson.id).to.exist;",
									"        pm.expect(responseJson.amount).to.equal('2500.00');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"unit\": 1,\n    \"description\": \"Cuota extraordinaria - Reparación elevador\",\n    \"amount\": \"2500.00\",\n    \"due_date\": \"2025-10-15\",\n    \"status\": \"Pendiente\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/administration/financial-fees/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"administration",
								"financial-fees",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener Cuota Específica",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/administration/financial-fees/1/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"administration",
								"financial-fees",
								"1",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Marcar Cuota como Pagada",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"Pagado\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/administration/financial-fees/{{last_fee_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"administration",
								"financial-fees",
								"{{last_fee_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear Cuota de Mantenimiento - Octubre",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"unit\": 3,\n    \"description\": \"Cuota de mantenimiento - Octubre 2025\",\n    \"amount\": \"1500.00\",\n    \"due_date\": \"2025-10-31\",\n    \"status\": \"Pendiente\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/administration/financial-fees/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"administration",
								"financial-fees",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear Cuota Vencida (Ejemplo)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"unit\": 2,\n    \"description\": \"Multa por ruido excesivo\",\n    \"amount\": \"500.00\",\n    \"due_date\": \"2025-08-30\",\n    \"status\": \"Vencido\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/administration/financial-fees/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"administration",
								"financial-fees",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "🧪 Pruebas de Integración",
			"item": [
				{
					"name": "Mi Perfil (Endpoint /me/)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/administration/users/me/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"administration",
								"users",
								"me",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar Unidades Residenciales",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/administration/residential-units/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"administration",
								"residential-units",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Prueba Sin Autenticación (Debe fallar)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Sin autenticación debe retornar 401', function () {",
									"    pm.expect(pm.response.code).to.equal(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/administration/announcements/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"administration",
								"announcements",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://127.0.0.1:8000",
			"type": "string"
		}
	]
}
